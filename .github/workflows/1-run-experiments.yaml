name: CML
on:
  # workflow_dispatch: {}
  push:
    branches:    
      - 'exp*'
    paths:
      - "data/**"
      - "src/**"
      - "params.yaml"
      - "dvc.*"
jobs:
  deploy-runner:
    runs-on: ubuntu-latest
    environment: cloud
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: iterative/setup-cml@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Create Runner
        env:
          REPO_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: |
          cml runner launch --single \
            --labels=cml \
            --cloud=aws \
            --cloud-region=us-west-1 \
            --cloud-type=t2.micro \
            --cloud-hdd-size=10 \
            --idle-timeout=300 \
  train-model:
    needs: deploy-runner
    runs-on: [ self-hosted, cml ]
    timeout-minutes: 240
    environment: cloud
    container: iterativeai/cml:0-dvc2-base1
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: cml setup
        run: cml ci
        env:
          REPO_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: dvc-repro-cml
        env:
          REPO_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: |
          # Install dependencies
          pip install -r requirements.txt
          # Download data
          dvc pull
          # Run pipeline
          dvc repro
          # Push data
          dvc push
          # Commit all changes and create a pull request
          cml pr create --squash --skip-ci .
      
      - name: create-report
        env:
          REPO_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: |
          ### CML report ###
          echo '## Metrics' >> report.md
          dvc metrics show --md >> report.md
          # cat reports/metrics.json >> report.md
          echo "## Params" >> report.md
          dvc params diff dvc-init --md >> report.md
          echo "## Confusion matrix" >> report.md
          # "cml publish" is deprecated since "cml comment" now supports "![inline](./asset.png)"
          # cml publish reports/confusion_matrix.png --md >> report.md
          echo '![](./reports/figures/clusters.png) "Clusters"' >> report.md
          # Depracated: cml send-comment --pr --update report.md
          cml comment update --target=pr report.md 